jdbcDriverClassName: org.mariadb.jdbc.Driver
jdbcURL: jdbc:mysql://${C8OBilling.database=127.0.0.1:3306}/c8oAnalytics
jdbcUserName: ${C8OBilling.user=analytics}
jdbcUserPassword: x7630a0dc9f07869c216f1b77e8680937079b191fe4b77b75e73f740aa241aba9495bf5fca68da3740b983cd60777693a1309eb501ed5432d1c3d35431c9617e434ca36d3710bbf04f1aba413fc3de7ae
↓ComputeSessions [transactions.SqlTransaction-1701018823748]: 
  ↑default: true
  comment: Compute concurent sessions for each day given a time range
  sqlQuery: |
    WITH SessionEvents AS (
        SELECT 
            creationDate, 
            sessionID,
            userName,
            1 as sessionChange
        FROM 
            Ticket
        WHERE 
            connectorName = 'start'
    	AND
    		customerName = '{customerName}'
    	AND
    		LENGTH(sessionID) > 8
    	AND
            creationDate
    		BETWEEN
    			UNIX_TIMESTAMP('{startDate}') * 1000
            AND
    			UNIX_TIMESTAMP('{endDate}') * 1000
    
        UNION ALL
    
        SELECT 
            creationDate, 
            sessionID,
            userName,
            -1 as sessionChange
        FROM 
            Ticket
        WHERE 
            connectorName = 'stop'
    	AND
    		customerName = '{customerName}'
    	AND
    		LENGTH(sessionID) > 8
    	AND
            creationDate
    		BETWEEN
    			UNIX_TIMESTAMP('{startDate}') * 1000
            AND
    			UNIX_TIMESTAMP('{endDate}') * 1000
    ),
    CumulativeSessions AS (
        SELECT 
            creationDate, 
            sessionID,
            userName,
            SUM(sessionChange) OVER (ORDER BY creationDate) as concurrentSessions
        FROM 
            SessionEvents
    )
    SELECT 
        ROUND(creationDate / 1000, 0) as Epoch, 
        FROM_UNIXTIME(creationDate / 1000) as DateTime, 
        sessionID,
        userName,
        concurrentSessions,
    	(ROUND((LEAD(creationDate) OVER (ORDER BY creationDate) - creationDate) / 1000 ) * concurrentSessions) AS sessionSeconds
    FROM 
        CumulativeSessions
    ORDER BY 
        creationDate;
        
  ↓Bookplanet [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701019320201]: 
      description: customerName
      value: bookplanet
    ↓startDate [variables.TestCaseVariable-1701019910112]: 
      description: startDate
      value: 2023-11-27
    ↓endDate [variables.TestCaseVariable-1701019910114]: 
      description: endDate
      value: 2023-12-30
  ↓Trialnocode [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701019320205]: 
      description: customerName
      value: harmonie-mutuelle
    ↓startDate [variables.TestCaseVariable-1701022685399]: 
      description: startDate
      value: 2023-01-01
    ↓endDate [variables.TestCaseVariable-1701022685402]: 
      description: endDate
      value: 2023-11-30
  ↓customerName [variables.RequestableVariable-1701019320208]: 
    comment: a Tenant customer name
    description: customerName
  ↓startDate [variables.RequestableVariable-1701019901608]: 
    comment: a Start date in the YYYY-MM-DD format
    description: startDate
  ↓endDate [variables.RequestableVariable-1701019901610]: 
    comment: An End date in the YYYY-MM-DD format
    description: endDate
↓CountUsers [transactions.SqlTransaction-1701018823748]: 
  comment: Count users on a day by day basis with new added users and cumulated users
  sqlQuery: |
    SELECT 
        DATE(FROM_UNIXTIME(creationDate / 1000)) AS Day,
        COUNT(DISTINCT userName) AS DailyDistinctUsers,
        SUM(COUNT(DISTINCT userName)) OVER (ORDER BY DATE(FROM_UNIXTIME(creationDate/ 1000))) AS CumulativeDistinctUsers
    FROM 
        Ticket
    WHERE 
    	customerName = '{customerName}'
    AND
        creationDate BETWEEN (UNIX_TIMESTAMP('{startDate}') * 1000) AND (UNIX_TIMESTAMP('{endDate}')* 1000)
    AND
    	connectorName = 'stop'
    AND
    	username <> ''
    GROUP BY 
        Day
    ORDER BY 
        Day;
    
  ↓Bookplanet [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701345259303]: 
      description: customerName
      value: bookplanet
    ↓startDate [variables.TestCaseVariable-1701345259306]: 
      description: startDate
      value: 2023-11-01
    ↓endDate [variables.TestCaseVariable-1701345259309]: 
      description: endDate
      value: 2023-12-30
  ↓Trialnocode [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701345259313]: 
      description: customerName
      value: harmonie-mutuelle
    ↓startDate [variables.TestCaseVariable-1701345259316]: 
      description: startDate
      value: 2023-01-01
    ↓endDate [variables.TestCaseVariable-1701345259319]: 
      description: endDate
      value: 2023-12-30
  ↓customerName [variables.RequestableVariable-1701368843701]: 
    comment: a Tenant customer name
    description: customerName
  ↓startDate [variables.RequestableVariable-1701368843704]: 
    comment: a Start date in the YYYY-MM-DD format
    description: startDate
  ↓endDate [variables.RequestableVariable-1701368843707]: 
    comment: An End date in the YYYY-MM-DD format
    description: endDate
↓ListCustomerActivity [transactions.SqlTransaction-1701018823748]: 
  comment: List all users by day they first appear
  responseExpiryDate: daily,00:00:00
  sqlQuery: |
    SELECT
        	customerName, 
    	COUNT(*) AS Activity
    FROM
       	Ticket
    WHERE
        	creationDate BETWEEN (UNIX_TIMESTAMP('{startDate}') * 1000) AND (UNIX_TIMESTAMP('{endDate}') * 1000)
    AND
    	(connectorName = 'start' OR connectorName = 'stop')
    GROUP BY
    	customerName
    ORDER BY
    
    	Activity DESC
    
  ↓Test [core.TestCase]: 
    ↓startDate [variables.TestCaseVariable-1702804003468]: 
      description: startDate
      value: 2022-12-30
    ↓endDate [variables.TestCaseVariable-1702804003471]: 
      description: endDate
      value: 2023-12-30
    ↓customerName [variables.TestCaseVariable-1703582364290]: 
      value: 
  ↓startDate [variables.RequestableVariable-1702804003487]: 
    comment: a Start date in the YYYY-MM-DD format
    description: startDate
  ↓endDate [variables.RequestableVariable-1702804003490]: 
    comment: An End date in the YYYY-MM-DD format
    description: endDate
↓ListCustomers [transactions.SqlTransaction]: 
  comment: List all the customers in the billing database
  sqlQuery: |
    SELECT DISTINCT
    	customerName
    FROM
    	Ticket
    
↓ListStartsAndStops [transactions.SqlTransaction-1701018823748]: 
  comment: Give a table of all session starts and stops and the date/time they occured
  sqlQuery: |
    SELECT 
    	id,
    	customerName,
    	creationDate,
    	from_unixtime(creationDate / 1000) AS DateTime,
    	connectorName,
    	userName,
    	userAgent,
    	sessionID
    FROM
    	c8oAnalytics.Ticket
    WHERE
    	customerName ='{customerName}'
    AND
    	userAgent <> ''
    AND
    	(connectorName = 'start' OR connectorName = 'stop')
    
    
  ↓Bookplanet [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701019187116]: 
      description: customerName
      value: bookplanet
  ↓Trialnocode [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701019158592]: 
      description: customerName
      value: trial-nocode
  ↓customerName [variables.RequestableVariable-1701019136332]: 
    description: customerName
↓ListUserAgents [transactions.SqlTransaction]: 
  comment: Lis all the different user agents in the database 
  sqlQuery: |
    SELECT 
        Platform,
        Total,
        (Total * 100.0 / (SELECT COUNT(*) FROM Ticket)) AS Percentage,
        FROM_UNIXTIME(UNIX_TIMESTAMP('{startDate}') * 1000) AS DateStart,
        FROM_UNIXTIME(UNIX_TIMESTAMP('{endDate}') * 1000) AS DateEnd
    FROM 
        (SELECT 
            CASE
                WHEN userAgent LIKE '%Android%' THEN 'Android'
                WHEN userAgent LIKE '%iPhone%' THEN 'iOS'
                WHEN userAgent LIKE '%Linux%' THEN 'Linux'
                WHEN userAgent LIKE '%Windows%' THEN 'Windows'
                ELSE 'Other'
            END AS Platform,
            COUNT(*) AS Total
        FROM 
            Ticket
    	WHERE
    		customerName = '{customerName}'
            AND (connectorName = 'start' OR connectorName = 'stop')
            AND creationDate BETWEEN (UNIX_TIMESTAMP('{startDate}') * 1000) AND (UNIX_TIMESTAMP('{endDate}') * 1000)
        GROUP BY 
            Platform) AS SubQuery;
    
  ↓Bookplanet [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701022466248]: 
      description: customerName
      value: bookplanet
    ↓startDate [variables.TestCaseVariable-1702305091657]: 
      description: startDate
      value: 2023-11-03
    ↓endDate [variables.TestCaseVariable-1702305091659]: 
      description: endDate
      value: 2023-11-12
  ↓customerName [variables.RequestableVariable-1701022451995]: 
    description: customerName
  ↓startDate [variables.RequestableVariable-1702304703870]: 
    description: startDate
  ↓endDate [variables.RequestableVariable-1702304703872]: 
    description: endDate
↓ListUsers [transactions.SqlTransaction-1701018823748]: 
  comment: Give a table of all session starts and stops and the date/time they occured
  sqlQuery: |
    SELECT 
    	customerName,
    	from_unixtime(creationDate / 1000) AS DateTime,
    	userName,
    	sessionID,
    	creationDate
    FROM
    	c8oAnalytics.Ticket
    WHERE
    	customerName ='{customerName}'
    AND
    	userName <> ''
    AND
    	connectorName = 'stop'
    AND
          	creationDate
    		BETWEEN
    			UNIX_TIMESTAMP('{startDate}') * 1000
                	AND
                		UNIX_TIMESTAMP('{endDate}') * 1000
    ORDER BY
    	creationDate
    LIMIT 100
    
  ↓Bookplanet [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1702295871260]: 
      description: customerName
      value: bookplanet
    ↓startDate [variables.TestCaseVariable-1702295926128]: 
      description: startDate
      value: 2023-12-01
    ↓endDate [variables.TestCaseVariable-1702295926130]: 
      description: endDate
      value: 2023-12-30
  ↓Trialnocode [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1702295871264]: 
      description: customerName
      value: trial-nocode
  ↓customerName [variables.RequestableVariable-1702295871267]: 
    description: customerName
  ↓startDate [variables.RequestableVariable-1702295909582]: 
    comment: a Start date in the YYYY-MM-DD format
    description: startDate
  ↓endDate [variables.RequestableVariable-1702295909585]: 
    comment: An End date in the YYYY-MM-DD format
    description: endDate
↓ListUsersPerDay [transactions.SqlTransaction-1701018823748]: 
  comment: List all users by day they first appear
  sqlQuery: |
    SELECT
        DISTINCT userName,
        Date
        FROM (
    SELECT
        userName,
        DATE(FROM_UNIXTIME(creationDate / 1000)) as Date
    FROM
       Ticket
    WHERE
        creationDate BETWEEN (UNIX_TIMESTAMP('{startDate}') * 1000) AND (UNIX_TIMESTAMP('{endDate}') * 1000)
    AND
        customerName = '{customerName}'
    AND 
        userName <> ''
    AND
    	connectorName = 'stop'
    ) as NameDate
    
  ↓Bookplanet [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701368118040]: 
      description: customerName
      value: bookplanet
    ↓startDate [variables.TestCaseVariable-1701368118043]: 
      description: startDate
      value: 2023-11-01
    ↓endDate [variables.TestCaseVariable-1701368118046]: 
      description: endDate
      value: 2023-12-30
  ↓Trialnocode [core.TestCase]: 
    ↓customerName [variables.TestCaseVariable-1701368118050]: 
      description: customerName
      value: harmonie-mutuelle
    ↓startDate [variables.TestCaseVariable-1701368118053]: 
      description: startDate
      value: 2023-01-01
    ↓endDate [variables.TestCaseVariable-1701368118056]: 
      description: endDate
      value: 2023-12-30
  ↓customerName [variables.RequestableVariable-1701368807566]: 
    comment: a Tenant customer name
    description: customerName
  ↓startDate [variables.RequestableVariable-1701368807569]: 
    comment: a Start date in the YYYY-MM-DD format
    description: startDate
  ↓endDate [variables.RequestableVariable-1701368807572]: 
    comment: An End date in the YYYY-MM-DD format
    description: endDate